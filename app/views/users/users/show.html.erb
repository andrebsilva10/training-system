<% provide :page_title, "Detalhes do Usuário - #{@user.name}" %>

<div class="bg-white rounded-lg shadow-md">
  <div class="border-b border-gray-200">
    <div class="px-6 pt-6 pb-4 flex items-center justify-between">
      <h1 class="text-2xl font-bold text-gray-900">
        <%= @user.name %>
        <% if @user.active? %>
          <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
            Ativo
          </span>
        <% else %>
          <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
            Inativo
          </span>
        <% end %>
      </h1>
      
      <div>
        <%= link_to "Voltar para Usuários", users_list_path, class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md bg-indigo-600 hover:bg-indigo-700" %>
      </div>
    </div>
    
    <div class="px-6 pb-2">
      <nav class="-mb-px flex space-x-8" aria-label="Tabs">
        <a href="#tab-info" class="tab-link border-indigo-500 text-indigo-600 whitespace-nowrap p-4 border-b-2 font-medium text-sm" data-tab="tab-info">
          Informações
        </a>
        <a href="#tab-trainings" class="tab-link border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap p-4 border-b-2 font-medium text-sm" data-tab="tab-trainings">
          Treinamentos
        </a>
        <a href="#tab-departments" class="tab-link border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap p-4 border-b-2 font-medium text-sm" data-tab="tab-departments">
          Setores
        </a>
      </nav>
    </div>
  </div>
  
  <div class="tab-content p-6" id="tab-info">
    <!-- Informações do Usuário -->
    <div class="bg-white overflow-hidden border border-gray-200 rounded-lg mb-6">
      <div class="px-4 py-5 sm:px-6 bg-gray-50">
        <h3 class="text-lg leading-6 font-medium text-gray-900">Informações Pessoais</h3>
      </div>
      <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
        <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
          <div>
            <dt class="text-sm font-medium text-gray-500">Nome</dt>
            <dd class="mt-1 text-sm text-gray-900"><%= @user.name %></dd>
          </div>
          <div>
            <dt class="text-sm font-medium text-gray-500">E-mail</dt>
            <dd class="mt-1 text-sm text-gray-900"><%= @user.email_address %></dd>
          </div>
          <div>
            <dt class="text-sm font-medium text-gray-500">Status</dt>
            <dd class="mt-1 text-sm text-gray-900">
                <%= @user.active? ? "Ativo" : "Inativo" %>
              
                <% if Current.user.admin? %>
                <% if @user.active? %>
                    <%= button_to "Desativar", users_toggle_active_user_path(@user), method: :patch, class: "mt-1 text-xs text-red-600 hover:text-red-900" %>
                <% else %>
                    <%= button_to "Ativar", users_toggle_active_user_path(@user), method: :patch, class: "mt-1 text-xs text-green-600 hover:text-green-900" %>
                <% end %>
                <% end %>
            </dd>
          </div>
          <% if Current.user.admin? %>
            <div>
              <dt class="text-sm font-medium text-gray-500">Redefinir Senha</dt>
              <dd class="mt-1">
                <div id="reset-password-controls">
                  <div class="flex items-center mb-2">
                    <input type="checkbox" id="send_recovery_email" class="h-4 w-4 text-indigo-600 rounded" checked 
                          onchange="document.getElementById('manual_password').classList.toggle('hidden')" />
                    <label for="send_recovery_email" class="ml-2 text-sm text-gray-700">Enviar e-mail de recuperação</label>
                  </div>
                  
                  <div id="manual_password" class="hidden mb-2">
                    <input type="password" id="new_password" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Nova senha" />
                  </div>
                  
                  <button onclick="resetPassword(<%= @user.id %>)" class="inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md shadow-sm bg-indigo-600 hover:bg-indigo-700">
                    Redefinir Senha
                  </button>
                </div>
              </dd>
            </div>
            
          <script>
            function resetPassword(userId) {
              const sendEmail = document.getElementById('send_recovery_email').checked;
              const newPassword = document.getElementById('new_password').value;
              
              if (!sendEmail && !newPassword) {
                alert("Por favor, informe uma senha.");
                return;
              }
              
              const form = document.createElement('form');
              form.method = 'POST';
              form.action = sendEmail ? '<%= admin_reset_email_path(@user) %>' : '<%= admin_reset_password_path(@user) %>';
              
              // Adicionar CSRF token
              const csrfToken = document.createElement('input');
              csrfToken.type = 'hidden';
              csrfToken.name = '<%= request_forgery_protection_token %>';
              csrfToken.value = '<%= form_authenticity_token %>';
              form.appendChild(csrfToken);
              
              if (sendEmail) {
                // Usar o fluxo existente de recuperação por e-mail
                const emailInput = document.createElement('input');
                emailInput.type = 'hidden';
                emailInput.name = 'email_address';
                emailInput.value = '<%= @user.email_address %>';
                form.appendChild(emailInput);
              } else {
                // Definir a senha manualmente
                const passwordInput = document.createElement('input');
                passwordInput.type = 'hidden';
                passwordInput.name = 'password';
                passwordInput.value = newPassword;
                form.appendChild(passwordInput);
                
                // ID do usuário
                const userIdInput = document.createElement('input');
                userIdInput.type = 'hidden';
                userIdInput.name = 'id';
                userIdInput.value = userId;
                form.appendChild(userIdInput);
              }
              
              document.body.appendChild(form);
              form.submit();
            }
          </script>
          <% end %>
        </dl>
      </div>
    </div>
    
    <% if Current.user.admin? %>
      <div class="flex justify-end">
        <%= link_to "Editar Informações", edit_users_user_path(@user), class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md bg-indigo-600 hover:bg-indigo-700" %>
      </div>
    <% end %>
  </div>
  
  <div class="tab-content p-6 hidden" id="tab-trainings">
    <!-- Treinamentos do Usuário -->
    <div class="bg-white">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-xl font-semibold">Treinamentos</h2>
      </div>
      
      <% if @user_training_versions.any? %>
        <div class="overflow-x-auto">
          <table class="w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Treinamento</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Versão</th>
                <% if Current.user.admin? %>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Obrigatório</th>
                <% end %>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Atribuído em</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% @user_training_versions.each do |utv| %>
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-center">
                    <%= link_to utv.training_version.training.title, user_training_version_path(utv), class: "text-indigo-600 hover:text-indigo-900" %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                    <%= utv.training_version.version_number %>
                  </td>
                  <% if Current.user.admin? %>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                      <% if utv.required? %>
                        <span class="bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded-full">Sim</span>
                        <%= form_with(url: toggle_required_user_training_version_path(utv), method: :patch) do |f| %>
                          <%= f.submit "Tornar Opcional", class: "mt-1 text-xs text-indigo-600 hover:text-indigo-900" %>
                        <% end %>
                      <% else %>
                        <span class="bg-gray-100 text-gray-800 text-xs font-medium px-2.5 py-0.5 rounded-full">Não</span>
                        <%= form_with(url: toggle_required_user_training_version_path(utv), method: :patch) do |f| %>
                          <%= f.submit "Tornar Obrigatório", class: "mt-1 text-xs text-indigo-600 hover:text-indigo-900" %>
                        <% end %>
                      <% end %>
                    </td>
                  <% end %>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                    <% status_class = case utv.status 
                                 when "completed" then "bg-green-100 text-green-800" 
                                 when "in_progress" then "bg-blue-100 text-blue-800" 
                                 when "expired" then "bg-red-100 text-red-800" 
                                 else "bg-yellow-100 text-yellow-800" end %>
                    <span class="<%= status_class %> px-2 py-1 rounded-full text-xs">
                      <%= t("user_training_version.status.#{utv.status}") %>
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                    <%= l(utv.assigned_at, format: :short) if utv.assigned_at %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <%= link_to "Detalhes", user_training_version_path(utv), class: "text-indigo-600 hover:text-indigo-900" %>
                    <% if Current.user.admin? %>
                      <%= button_to "Remover", utv, method: :delete, class: "mt-1 text-xs text-red-600 hover:text-red-900", data: { turbo_confirm: "Tem certeza que deseja remover esta atribuição?" } %>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <div class="text-center py-10 bg-gray-50 rounded-lg">
          <svg class="mx-auto h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">Sem treinamentos</h3>
          <p class="mt-1 text-sm text-gray-500">Este usuário não possui treinamentos atribuídos.</p>
          <% if Current.user.admin? %>
            <div class="mt-6">
              <%= link_to "Atribuir Treinamentos", assign_trainings_path(user_id: @user.id), class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md bg-indigo-600 hover:bg-indigo-700" %>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
  
  <div class="tab-content p-6 hidden" id="tab-departments">
    <!-- Setores do Usuário -->
    <div class="bg-white">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-xl font-semibold">Setores</h2>
        <% if Current.user.admin? %>
          <button type="button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md bg-green-600 hover:bg-green-700" onclick="toggleAddDepartmentForm()">
            Adicionar Setor
          </button>
        <% end %>
      </div>
      
      <% if Current.user.admin? %>
        <div id="add-department-form" class="mb-6 hidden bg-gray-50 p-4 rounded-lg">
          <h3 class="text-md font-medium mb-3">Adicionar Setor ao Usuário</h3>
          <%= form_with(url: users_add_department_user_path(@user), method: :post, class: "flex items-end") do |form| %>
            <div class="w-full">
              <%= form.label :department_id, "Selecione o Setor", class: "block text-sm font-medium text-gray-700" %>
              <%= form.collection_select :department_id, 
                  Department.where.not(id: @user_departments.pluck(:id)), 
                  :id, 
                  :name, 
                  { prompt: "Selecione um setor" }, 
                  class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
            </div>
            <%= form.submit "Adicionar", class: "ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md bg-indigo-600 hover:bg-indigo-700" %>
          <% end %>
        </div>
      <% end %>
      
      <% if @user_departments.any? %>
        <div class="overflow-x-auto">
          <table class="w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome do Setor</th>
                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Usuários</th>
                <% if Current.user.admin? %>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                <% end %>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% @user_departments.each do |department| %>
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-center">
                    <%= department.name %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                    <%= department.users.count %>
                  </td>
                  <% if Current.user.admin? %>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <%= button_to "Remover", users_remove_department_user_path(@user, department_id: department.id), method: :delete, class: "text-red-600 hover:text-red-900", data: { turbo_confirm: "Tem certeza que deseja remover este setor do usuário?" } %>
                    </td>
                  <% end %>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <div class="text-center py-10 bg-gray-50 rounded-lg">
          <svg class="mx-auto h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">Sem setores</h3>
          <p class="mt-1 text-sm text-gray-500">Este usuário não está atribuído a nenhum setor.</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  // Função principal de inicialização das abas
  function initTabs() {
    const tabLinks = document.querySelectorAll('.tab-link');
    const tabContents = document.querySelectorAll('.tab-content');
    
    function setActiveTab(tabId) {
      // Atualizar estilos dos links
      tabLinks.forEach(link => {
        if (link.getAttribute('data-tab') === tabId) {
          link.classList.add('border-indigo-500', 'text-indigo-600');
          link.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
        } else {
          link.classList.remove('border-indigo-500', 'text-indigo-600');
          link.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
        }
      });
      
      // Mostrar/ocultar conteúdo das abas
      tabContents.forEach(content => {
        if (content.id === tabId) {
          content.classList.remove('hidden');
        } else {
          content.classList.add('hidden');
        }
      });
    }
    
    // Adicionar event listeners para as abas
    tabLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const tabId = this.getAttribute('data-tab');
        setActiveTab(tabId);
        
        // Atualizar a URL sem recarregar a página
        history.pushState(null, null, '#' + tabId);
      });
    });
    
    // Verificar se há um hash na URL e ativar a aba correspondente
    if (window.location.hash) {
      const tabId = window.location.hash.substring(1);
      setActiveTab(tabId);
    }
  }
  
  // Função para mostrar/ocultar o formulário de adicionar setor
  function toggleAddDepartmentForm() {
    const form = document.getElementById('add-department-form');
    if (form) {
      form.classList.toggle('hidden');
    }
  }
  
  // Múltiplos eventos para garantir que o código seja executado em diferentes contextos
  
  // Para carregamentos normais de página
  document.addEventListener('DOMContentLoaded', initTabs);
  
  // Para Rails 7 com Turbo
  document.addEventListener('turbo:load', initTabs);
  
  // Para Rails 6 com Turbolinks
  document.addEventListener('turbolinks:load', initTabs);
  
  // Executar o código imediatamente após sua definição
  // Isso garante que ele seja executado mesmo sem os eventos acima
  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    setTimeout(initTabs, 1);
  }
  
  // Expor a função toggleAddDepartmentForm globalmente para o botão
  window.toggleAddDepartmentForm = toggleAddDepartmentForm;
</script>